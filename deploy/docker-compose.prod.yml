
services:
  api:
    build:
      context: ..
      dockerfile: Dockerfile
    image: intradyne-lite:1.9.0
    env_file:
      - ../.env
    environment:
      - PYTHONPATH=/app/src
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - RATE_LIMIT_REQS=${RATE_LIMIT_REQS:-120}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-60}
    command: uvicorn intradyne.api.app:app --host 0.0.0.0 --port 8000
    volumes:
      - ../data:/app/data
      - ../reports:/app/reports
    read_only: true
    tmpfs:
      - /tmp
    mem_limit: 512m
    cpus: 0.50
    restart: unless-stopped
    networks: [web]

  caddy:
    image: caddy:2
    restart: unless-stopped
    environment:
      - ACME_AGREE=true
      - CADDY_EMAIL=${CADDY_EMAIL}
      - DOMAIN=${DOMAIN}
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    networks: [web]

  prometheus:
    image: prom/prometheus:v2.55.1
    profiles: [monitoring]
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus-alerts:/etc/prometheus/alerts:ro
    networks: [web]

  grafana:
    image: grafana/grafana:11.1.4
    profiles: [monitoring]
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SMTP_ENABLED=${GF_SMTP_ENABLED:-false}
      - GF_SMTP_HOST=${GF_SMTP_HOST:-smtp.example.com:587}
      - GF_SMTP_USER=${GF_SMTP_USER:-user}
      - GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD:-pass}
      - GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS:-alerts@example.com}
      - GF_SMTP_FROM_NAME=${GF_SMTP_FROM_NAME:-Intradyne Grafana}
      - GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL:-http://localhost:3000}
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks: [web]
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro

networks:
  web: {}

volumes:
  caddy_data: {}
  caddy_config: {}
